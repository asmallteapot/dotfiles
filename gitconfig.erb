[user]
	name = <%= ENV['HUMAN'] %>
	email = <%= ENV['EMAIL'] %>
[credential]
	helper = osxkeychain
[alias]
	# assume a file is unmodified for now
	assume		= update-index --assume-unchanged
	unassume	= update-index --no-assume-unchanged
	assumed		= "!git ls-files -v | grep ^h | cut -c 3-"

	# recursively initialize and update all submodules
	checkout-submodules = submodule update --init --recursive

	# copy the short hash of the last commit
	copy-hash = !git rev-parse --short HEAD | perl -i -p -e 's/\n//' | pbcopy

	# choose which changes within a file to add
	patch = add --patch

	# show a colourful, branched verison of history
	history = log --graph --pretty=format:'%C(yellow)%h%Creset%C(blue)%d%Creset %C(white bold)%s%Creset %C(white dim)(by %an %ar)%Creset' --all

	# show a list of all local files matched by your .gitignore
	ignored = ls-files –others -i –exclude-standard

	# lazy shortcuts
	br  = branch
	ci  = commit
	cia = commit --all
	cim = commit --amend
	co  = checkout
	df  = diff
	dfc = diff --cached
	h = history
	push = push --set-upstream

	# fetch remote changes, then replay any unpushed commits on top of them
	purr = pull ––rebase

	# perform an interface rebase of unpushed commits
	# clean up commit messages, squash dumb extra commits, etc
	ready = rebase -i @{u}

	# look for diffs that add or remove a reference to the provided string
	search = log -S

	# show commits that deleted files
	show-deleted = log --diff-filter=D --summary

	# backup working changes with a date-stamped stash
	snapshot = !git stash save "snapshot: $(date)" && git stash apply "stash@{0}"

	# shorter status
	st  = status -sb

	# show all commits made in the past 24 hours
	standup = !git log –since yesterday –author `git config user.email` –pretty=short

	## move the last commit back to the index
	undo = reset --soft HEAD^
[core]
	excludesfile = <%= ENV['HOME'] %>/.gitignore
	editor = <%= ENV['EDITOR'] %>
	staged = diff --cached
	autocrlf = input
	pager = less -r
[apply]
	whitespace = fix
[push]
	default = simple
[format]
	pretty = %C(yellow)%h%Creset %s %C(red)(%cr)%Creset
[color]
  branch = auto
  diff = auto
  status = auto
[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green
[color "diff"]
  meta = yellow bold
  frag = magenta bold
  old = red bold
  new = green bold
[color "status"]
  added = yellow
  changed = green
  untracked = cyan

[diff "localizablestrings"]
  textconv = "iconv -f utf-16 -t utf-8"
  binary = false
[difftool "Kaleidoscope"]
	cmd = ksdiff --partial-changeset --relative-path "$MERGED" -- "$LOCAL" "$REMOTE"
[difftool]
	prompt = false
[diff]
	# make diffs easier to read
	algorithm = patience
	tool = Kaleidoscope

[mergetool "Kaleidoscope"]
	cmd = ksdiff --merge --output "$MERGED" --base "$BASE" -- "$LOCAL" "$REMOTE"
[mergetool]
	prompt = false
[merge]
	tool = Kaleidoscope
